diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9b60f21c..3b0ccc56 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,5 @@
 cmake_minimum_required(VERSION 3.6)
+cmake_policy(SET CMP0091 NEW)
 project(vgmstream NONE)
 
 if(CMAKE_SYSTEM_NAME MATCHES Darwin)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index cf324909..118c1588 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -76,3 +76,28 @@ if(NOT EMSCRIPTEN)
 		set_target_properties(libvgmstream_shared PROPERTIES LINK_FLAGS_RELEASE -s)
 	endif()
 endif()
+
+if(MSVC)
+	target_compile_definitions(libvgmstream PRIVATE "USE_ALLOCA")
+	target_compile_options(libvgmstream PRIVATE /DVGM_DEBUG_OUTPUT)
+endif()
+
+# Install library
+install(TARGETS libvgmstream
+  RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+  ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+  LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+)
+
+if(NOT SKIP_INSTALL_HEADERS)
+	# Install headers
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/vgmstream.h DESTINATION include/libvgmstream )
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/plugins.h DESTINATION include/libvgmstream )
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/util.h DESTINATION include/libvgmstream )
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/util.h DESTINATION include/libvgmstream )
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/util/log.h DESTINATION include/libvgmstream/util )
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/streamtypes.h DESTINATION include/libvgmstream )
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/streamfile.h DESTINATION include/libvgmstream )
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/coding/g72x_state.h DESTINATION include/libvgmstream/coding )
+	install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/coding/nwa_decoder.h DESTINATION include/libvgmstream/coding )
+endif()
diff --git a/src/streamfile.c b/src/streamfile.c
index 0e6cb01e..d2d7b666 100644
--- a/src/streamfile.c
+++ b/src/streamfile.c
@@ -263,8 +263,10 @@ static STREAMFILE* open_stdio_streamfile_buffer_by_file(FILE* infile, const char
     this_sf->buf = buf;
 
     this_sf->name_len = strlen(filename);
-    if (this_sf->name_len >= sizeof(this_sf->name))
+    if (this_sf->name_len >= sizeof(this_sf->name)) {
+        vgm_logi("STREAMFILE: filename length is longer than sizeof(this_sf->name).\n");
         goto fail;
+    }
     memcpy(this_sf->name, filename, this_sf->name_len);
     this_sf->name[this_sf->name_len] = '\0';
 
@@ -304,6 +306,7 @@ static STREAMFILE* open_stdio_streamfile_buffer_by_file(FILE* infile, const char
     return &this_sf->vt;
 
 fail:
+    vgm_logi("STREAMFILE: could not allocate stream because of memory exhaustion.\n");
     free(buf);
     free(this_sf);
     return NULL;
